#set text(lang: "it")
#set footnote(numbering: "*")
#set heading(numbering: "1.1")
#set par(justify: true)
#set page(
	numbering: (..nums) => nums.pos().map(str).join(" di "),
)

#align(center, rect(
    inset: 5pt,
    [#rect(
    width: 70%,
    [
		#align(center, smallcaps(text(20pt)[*Cooperativa pescatori dzuk*]))
		#align(center, [Giovanni Spera #h(1cm) #link("mailto:gui.spera@studenti.unina.it")])
    ])
]))

#let attore(x) = box(fill: yellow, inset: 1pt)[#x]
#let classe(x) = box(fill: purple, inset: 1pt)[#x]
#let attributo(x) = box(fill: green, inset: 1pt)[#x]
#let classeAttore(x) = box(fill: blue, inset: 1pt)[#x]
#let funzionalita(x) = box(fill: red, inset: 1pt)[#x]

#outline(title: "Indice")

= Analisi e specifica dei requisiti
== Nomi-verbi
Si vuole realizzare un software per una cooperativa di pescatori. 
La cooperativa ha una sede in cui i #attore[pescatori] portano al mattino il pescato fresco, dotata di un magazzino (per la 
conservazione di pescato congelato). Nella sede si preparano le consegne da effettuare ai clienti, e da essa partono i 
camioncini, guidati dai fattorini.  

#attore[Il gestore della cooperativa] registra nel sistema pescherie e ristoranti clienti - inserendo il #attributo[tipo] (pescheria o ristorante), #attributo[nome pescheria/ristorante], #attributo[indirizzo], #attributo[e-mail], #attributo[username], #attributo[password] - e i #classeAttore[fattorini] (#attributo[nome], #attributo[username], #attributo[password]).
Il gestore può inoltre inserire le tipologie di #classe[prodotti], ognuna identificata da un #attributo[codice], una #attributo[categoria] (e.g., pesci, crostacei, molluschi, etc.), un 
#attributo[tipo] (verace, allevamento, congelato), una #attributo[descrizione] e il #attributo[prezzo] (al Kg).  
 
I #classeAttore[ristoranti] e le #classeAttore[pescherie] clienti possono #funzionalita[consultare il sistema per visualizzare i prodotti con i prezzi]. Solo i #attore[clienti registrati] dal gestore possono accedere al sistema per #funzionalita[inviare ordini]. Una volta effettuato l'accesso, una pescheria o un ristorante 
cliente può selezionare i prodotti da acquistare dalla cooperativa - che dovranno essere consegnati il giorno dopo - 
specificando le rispettive #attributo[quantità]; il sistema predispone l’#classe[ordine] e lo #funzionalita[invia per e-mail] alla cooperativa.  
 
Uno o più #attore[impiegati della cooperativa] #funzionalita[ricevono gli ordini] e, al mattino presto, preparano le consegne affidate ai fattorini. A 
ciascun fattorino un impiegato consegna ogni mattina: #funzionalita[una stampa dell’elenco] di pescherie e ristoranti dove effettuare le 
consegne, e per ciascuna consegna l’#classe[elenco dei prodotti] (con #attributo[prezzo al Kg], #attributo[quantità] ordinata, e #attributo[prezzo totale]), che il 
fattorino farà firmare al cliente alla consegna. Effettuata una consegna, il #attore[fattorino] accede al sistema per #funzionalita[registrare che 
l’ordine è stato consegnato] (il sistema registra data e ora di consegna). 
 
Ogni settimana #funzionalita[il sistema genera in maniera automatica ed invia a ciascuna pescheria e a ciascun ristorante una fattura con 
l’elenco degli ordini della settimana, e l’importo complessivo.]
Ogni settimana, inoltre, il sistema #funzionalita[invia al gestore della cooperativa un report degli ordini, ordinato per pescheria/ristorante 
cliente, e con il totale complessivo del venduto.] 

=== Legenda
#attore[Attore]
#classe[Classe]
#attributo[Attributo]
#classeAttore[Classe-Attore]
#funzionalita[Funzionalita]

== Revisione requisiti
=== Riassunto del primo incontro con gli stakeholders
In questo primo incontro hanno partecipato il gestore della cooperativa, diversi rappresentanti di alcuni ristoranti e pescherie, un rappresentante dei fattorini e dei dipendenti della cooperativa.

E' presente un solo magazzino, questo non cambierà nel medio termine.

Non sarà necessariamente il gestore della cooperativa a registrare i nuovi clienti i nuovi impiegati e i nuovi fattorini.

E' possibile visualizzare i prodotti disponibili senza effettuare il login, ma le restanti operazioni richiedono un login.

I pescatori non accedono in prima persona al software, invece è un impiegato a registrare i prodotti a nome loro, il software però deve tenere traccia dei pescatori e della loro relazione con i prodotti.

Gli impiegati preparano gli ordini arrivati fino a quel momento(quindi anche un ordine arrivato pochi minuti prima) la mattina(l'orario specifico non viene riportato in quanto non ritenuto necessario per il software), dopo un determinato orario gl istessi impiegati saranno occupati a registrare i prodotti provenienti dai pescatori.

Il software deve generare settimanalmente le fatture per i clienti.
Le fatture sono in formato XML e compatibile con il sistema di interscambio dell'agenzia delle entrate.

Per ogni cliente, il software dele registrare il _codice univoco_ necessario per la fatturazione.

Ciascun ordine viene assegnato a un solo fattorino, come avviene la scelta del fattorino non è stato definito con precisione, dovrebbe essere ottimale.

I fattorini devono poter visualizzare gli ordini loro affidati prima delle consegne.
Poichè i fattorini spesso si organizzano individualmente ogni fattorino può indicare come consegnato qualsiasi ordine, non è richiesto che il software controlli che l'ordine sia stato affidato a quello specifico fattorino.

Da un primo incontro con gli stakeholders è risultato necessaria un interfaccia dinamica, che permetta con facilità l'inserimento di nuovi dipendenti(in particolare i fattorini) e che questi siano automaticamente registrati al sistema di login. Risulta necessario poi tenere traccia dei prezzi effettivi all'interno degli ordini, in quanto i prezzi cambiano in rapida frequenza.
Un interfaccia web non è stata ritenuta necessaria nell'immediata, e potrà essere considerata per una versione successiva del software,
in tale ambito è esclusa un interfaccia grafica non web, in quanto i fattorini userebbero dispositivi diversi tra di loro per accedere al sistema.

== Revisione Requisiti
1. Un cliente è definito da un tipo(pescheria o ristante), un indirizzo, indirizzo e-mail, un username e una password (usati per il login) e dal _codice univoco_(necessario per la fatturazione).
+ Alcuni impiegati possono registrare nuovi clienti, nuovi impiegati e/o nuovi fattorini nel software.
+ Impiegati e fattorini sono definiti da un username _univoco_ ed hanno un nome e una password.
+ I pescatori non hanno accesso al software.
5. Il software tiene traccia dei pescatori e di quali prodotti hanno fornito.
+ E' possibile, tramite al software, visualizzare i prodotti disponibili.
+ I clienti possono, dopo aver effettuato il login, creare un nuovo ordine
+ Gli impiegati si occupano della preparazione degli ordini e della registrazione dei prodotti.
+ La preparazione degli ordini e la registrazione dei prodotti devono essere eseguite ripetutamente e velocemente, difficilmente si passa da un attività ad un altra.
10. Un impiegato non può iniziare la preparazione di un ordine già in preparazione da un altro impiegato.
+ Ogni lunedì mattina viene creato un nuovo report, un report può essere generato anche manualmente.
+ Un report è una lista _ordinata per cliente_ dei prodotti venduti.
+ Un report contiene il totale del venduto, sia singolarmente per cliente sia totale.
+ Ogni lunedì mattina viene creata una fattura per ogni cliente.
15. Ogni fattura è specifica per un cliente e contiene una lista di prodotti venduti con il relativo costo, inoltre è presente il costo totale.
+ I prodotti possono essere fatturati una sola volta.
+ Le fatture generate automaticamente dal software vengono inviate automaticamente elettronicamente tramite il sistema di interscambio..
+ I fattorini possono visuallizare le proprie spedizioni.
+ I fattorini possono indicare come _consegnato_ qualsiasi ordine.
+ Ciascun ordine viene assegnato ad uno, ed un solo, fattorino

== Glossario
#table(
	columns: (1fr, 1fr, 1fr),
	inset: 5pt,
	align: horizon,
	[*Termine*], [*Descrizione*], [*Sinonimi*],
	[Prodotto], [Un pesce, mollusco, _etc..._, qualsiasi cosa possa essere pescato e venduto], [],
	[Impiegato], [Dipendente della cooperativa, sono esclusi pescatori e dipendente di altre aziende(pescherie e ristoranti)], [],
	[Cliente], [Una pescheria o un ristorante registrati al software], [],
)

== Classificazione dei requisiti
=== Requisiti funzionali
#table(
	columns: (1fr, 1fr, 1fr),
	inset: 3pt,
	align: horizon,
	[*ID*], [*Requisito*], [*Origine*],
	[RF01], [Alcuni impiegati possono registrare nuovi clienti], [2],
	[RF02], [Alcuni impiegati possono registrare nuovi impiegati], [2],
	[RF03], [Chiunque può visualizzare i prodotti disponibili all'acquisto], [6],
	[RF04], [Ciascun cliente può usare il software per effettuare un ordine], [7],
	[RF05], [Ciascun impiegato può prepare un ordine], [8],
	[RF06], [Ciascun impiegato può registrare un nuovo prodotto], [8],
	[RF07], [La preparazione di più ordini in sequenza deve essere rapido], [9],
	[RF08], [La registrazione di nuovi prodotti in sequenza deve essere rapida], [9],
	[RF09], [Non deve essere possibile iniziare la preparazione di un ordine già in preparazione da parte di un altro impiegato], [10],
	[RF10], [Ogni lunedì mattina deve essere generato un report], [11],
	[RF11], [Il report può essere generato anche tramite richiesta manuale], [11],
	[RF12], [Il report è ordinato per cliente], [12],
	[RF13], [Il report contiene tutti i prodotti venduti con il relativo costo], [12],
	[RF14], [Il report contiene il costo totale dei prodotti venduti per ogni cliente], [12],
	[RF15], [Il report contiene il costo totale dei prodotti venduti], [12],

	[RF16], [Ogni lunedì mattina deve essere generato una fattura per ogni cliente], [14],
	[RF17], [Ciascuna fattura è collegata ad un solo cliente], [15],
	[RF18], [Ciascuna fattura deve riportare tutti i prodotti che copre], [15],
	[RF19], [Ciascuna fattura deve riportare il costo di ogni prodotto che copra], [15],
	[RF20], [Ciascuna fattura deve riportare il costo totale], [15],
	[RF21], [Ciascun prodotto può essere presente in una sola fattura], [16],
	[RF22], [Ciascuna fattura deve essere inviata automaticamente al sistema di interscambio dell'agenzia delle entrate], [17],
	[RF23], [Ciascun ordine viene assegnato a un fattorino], [20],
	[RF24], [I fattorini possono visualizzare le proprie spedizioni], [18],
	[RF25], [Ciascun fattorino può indicare come consegnato qualsiasi ordine], [19],
)
=== Requisiti sui dati
#table(
	columns: (1fr, 1fr, 1fr),
	inset: 3pt,
	align: horizon,
	[*ID*], [*Requisito*], [*Origine*],
	[RD01], [Ciascun cliente può essere una pescheria o un ristorante], [1],
	[RF02], [Ciascun cliente ha un nome univoco, un indirizzo, un indirizzo e-mail e un codice univoco per la fatturazione], [1],
	[RF03], [Ciascun cliente ha un username una password per il login], [1],
	[RD04], [Ciascun impigati dispone di un username e una password per effettuare il login], [3],
	[RF05], [Ciascun fattorino disponde di un username e una password per effettuare il login], [3],
	[RF06], [Il software deve tenere traccia dei pescatori e quali prodotti hanno venduto], [5],
	[RF07], [E' necessario registrare gli ordini creati], [7],
	[RF08], [Il software deve registrare se un ordine è già in preparazione], [10],
	[RF09], [Il software deve tenere traccia dei prodotti venduti e del loro prezzo], [12],
	[RF10], [Per ogni prodotto venduto il software deve tenere traccia del cliente a cui è stato venduto], [12],
	[RF11], [Il software deve tenere traccia se un prodotto è stato già fatturato], [16],
)

=== Vincoli e altri requisiti
#table(
	columns: (1fr, 1fr),
	inset: 3pt,
	align: horizon,
	[*ID*], [*Requisito*],
	[RNF01], [Il sistema deve essere collegato ad internet per poter accedere al sistema di interscambio],
	[RNF02], [Il sistema deve avere modo di tenere traccia del tempo],
	[RNF03], [Il sistema deve permettere l'accesso simultaneo di più utenti],
	[RNF04], [Il sistema deve poter salvare i dati in modo permanente],
)

== Modellizione dei casi d'uso
#grid(
	columns: (1fr, 1fr),
	gutter: 5pt,
	
	[
		*Attori primari*:
		- Gestore della cooperativa
		- Impiegato
		- Cliente
		- Tempo
		- Fattorino
	],[
		*Attori secondari*:
		- Servizio interscambio agezia delle entrate
	],

	[
		*Casi d'uso di inclusione*:
		- Visualizzazione inventario
	],
	[
		*Casi d'uso di estensione*:
	]
)

#table(
	columns: (2fr, 1fr, 1fr, 1fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Attori primari*], [*Attori secondari*], [* Incl./Ext.*],

    [Registrazione cliente], [Impiegato, Gestore Cooperativa], [Cliente], [],
    [Registrazione impiegato], [Impiegato, Gestore Cooperativa], [Impiegato], [],
    [Registrazione prodotto], [Impiegato], [Pescatore], [],
    [Visualizzazione inventario], [Cliente, Utente non loggato], [], [],
    [Acquisto prodotti], [Cliente], [], [Visuallizaione inventario],
    [Genera report], [Tempo, Gestore Cooperativa], [], [],
    [Visualizza report], [Gestore Cooperativa], [], [],
    [Genera e invia fattura], [Tempo], [Sistema d'intescambio], [],
    [Visualizza spedizioni], [Fattorino], [], [],
    [Conferma consegna], [Fattorino], [], [],
)
=== Diagramma dei casi d'uso
#image("casi-duso.svg")

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Registrazione cliente*],
	[*Attore Primario*], [Impiegato o Gestore della Cooperativa],
	[*Attore Secondario*], [Cliente],
	[*Descrizione*], [Viene registrato un nuovo cliente nel software],
	[*Pre-Condizioni*], [L'impiegato ha il permesso di registrare nuovi clienti],
	[*Sequenza di eventi principale*], [
		1. L'impiegato o il gestore della cooperativa effettua il login al software
		2. L'utente seleziona di voler registrare un cliente
		3. L'utente inserisce i dati del cliente
	],
	[*Post-Condizioni*], [Il cliente viene registrato nel software],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [
		L'utente riceve un messaggio di errore se i dati sono erronei o nel caso ci sia un errore interno al software],
)

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Registrazione impiegato*],
	[*Attore Primario*], [Impiegato o Gestore della Cooperativa],
	[*Attore Secondario*], [Cliente],
	[*Descrizione*], [Viene registrato un nuovo impiegato nel software],
	[*Pre-Condizioni*], [L'impiegato ha il permesso di registrare nuovi impiegati],
	[*Sequenza di eventi principale*], [
		1. L'impiegato o il gestore della cooperativa effettua il login al software
		2. L'utente seleziona di voler registrare un nuovo impiegato
		3. L'utente inserisce i dati del nuovo impiegato
	],
	[*Post-Condizioni*], [Il nuovo impiegato viene registrato nel software],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [
		L'utente riceve un messaggio di errore se i dati sono erronei o nel caso ci sia un errore interno al software],
)

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Registrazione prodotto*],
	[*Attore Primario*], [Impiegato],
	[*Attore Secondario*], [Pescatore],
	[*Descrizione*], [L'impiegato registra il prodotto venduto dal pescatore],
	[*Pre-Condizioni*], [L'impiegato ha effettuato il login],
	[*Sequenza di eventi principale*], [
		1. L'impiegato inserisce i dati del prodotto
	],
	[*Post-Condizioni*], [Il nuovo prodotto viene registrato],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Visualizzazione inventario*],
	[*Attore Primario*], [Cliente o utente generico],
	[*Attore Secondario*], [],
	[*Descrizione*], [Il cliente visualizza i prodotti in vendita],
	[*Pre-Condizioni*], [],
	[*Sequenza di eventi principale*], [
		1. L'utente si collega al software e, opzionalmente, effettua il login
		2. L'utente seleziona di voler visualizzare l'inventario
	],
	[*Post-Condizioni*], [L'inventario di prodotti disponibili viene mostrato],
	[*Casi d'uso correlati*], [Aquisto prodotto],
	[*Sequenza di eventi alternativi*], [],
)

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Acquisto prodotti*],
	[*Attore Primario*], [Cliente],
	[*Attore Secondario*], [],
	[*Descrizione*], [Il cliente effettua un ordine],
	[*Pre-Condizioni*], [Il cliente ha effettuato il login],
	[*Sequenza di eventi principale*], [
		1. Il cliente seleziona i prodotti da ordinare
		2. Il cliente conferma la selezione e il costo
	],
	[*Post-Condizioni*], [L'ordine viene registrato nel software],
	[*Casi d'uso correlati*], [Visualizzazione inventario],
	[*Sequenza di eventi alternativi*], [Il cliente annulla l'acquisto, prima della conferma],
)

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Genera report*],
	[*Attore Primario*], [Tempo, Gestore Cooperativa],
	[*Attore Secondario*], [],
	[*Descrizione*], [Viene generato il report settimanale],
	[*Pre-Condizioni*], [E' lunedì, o è stato scelto di generare un report e il gestore ha effettuato il login],
	[*Sequenza di eventi principale*], [
		1. Il software raccoglie tutti i prodotti venduti
		2. Il software genera il report
		3. Il software salva su file il report
	],
	[*Post-Condizioni*], [Viene creato un file di report],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)

#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Visualizza report*],
	[*Attore Primario*], [Gestore Cooperativa],
	[*Attore Secondario*], [],
	[*Descrizione*], [Viene mostrato l'ultimo report generato],
	[*Pre-Condizioni*], [E' stato generato un report, il gestore ha effettuato il login],
	[*Sequenza di eventi principale*], [
		1. Il software individua il report più recente
	],
	[*Post-Condizioni*], [Il report viene mostrato a schermo],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)
#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Genera e invio fattura*],
	[*Attore Primario*], [Tempo],
	[*Attore Secondario*], [Sistema d'interscambio],
	[*Descrizione*], [Vengono generate e inviate elettronicamente le fatture],
	[*Pre-Condizioni*], [E' disponibile una connessione internet],
	[*Sequenza di eventi principale*], [
		1. Il software individua i prodotti da fatturare
		2. Il software genera la fattura per ogni cliente
		3. Il software invia automaticamente tutte le fatture generate
	],
	[*Post-Condizioni*], [Le fatture sono generare e inviate elettronicamente],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)
#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Visualizza spedizioni*],
	[*Attore Primario*], [Fattorino],
	[*Attore Secondario*], [],
	[*Descrizione*], [Il fattorino visualizza le spedizioni che deve effettuare],
	[*Pre-Condizioni*], [Il fattorino ha effettuato il login],
	[*Sequenza di eventi principale*], [
		1. Il fattorino sceglie di visualizzare le consegne che deve effettuare
		2. Il software individua le spedizioni relative al fattorino
		3. Il software mostra le spedizioni
	],
	[*Post-Condizioni*], [Il fattorino vede le spedizioni che deve effettuare],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)
#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [*Conferma consegna*],
	[*Attore Primario*], [Fattorino],
	[*Attore Secondario*], [Cliente],
	[*Descrizione*], [Il fattorino conferma l'avvenuta consegna],
	[*Pre-Condizioni*], [Il fattorino sta consegnando l'ordine, il fattorino ha effettuato il login],
	[*Sequenza di eventi principale*], [
		1. Il fattorino sta effettuando la consegna
		2. Il fattorino indica che la consegna è stata effettuata
	],
	[*Post-Condizioni*], [L'ordine viene segnato come consegnato],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)
/*
#table(
	columns: (1fr, 2fr),
	inset: 5pt,
	align: horizon,
	[*Caso d'uso*], [**],
	[*Attore Primario*], [],
	[*Attore Secondario*], [],
	[*Descrizione*], [],
	[*Pre-Condizioni*], [],
	[*Sequenza di eventi principale*], [],
	[*Post-Condizioni*], [],
	[*Casi d'uso correlati*], [],
	[*Sequenza di eventi alternativi*], [],
)*/

==  Diagramma delle classi
#image("classi.svg")
=== revisione, con dettagli implementativi
#image("classi-2.svg")

== Caso d'uso
Benchè il login non sia un caso d'uso effettivo è stato isolato dagli altri.
=== Caso d'uso Login
#image("login.svg")
=== Caso d'uso Registrazione cliente
#image("impiegato-registra-cliente.svg")

== Stima dei costi
#table(
	columns: (1fr, 2fr, 2fr, 2fr),
	inset: 5pt,
	align: horizon,
	[], [*Valore*], [*Peso*],
	[*NILF*], [5 #footnote[Tabelle nel DB]], [Alto],
	[*NEIF*], [5 #footnote[Fattura elettronica]], [Medio], 
	[*NEI*], [10#footnote[Ingressi registrazione cliente, prodotto, impiegato]], [Basso], 
	[*NEO*], [3#footnote[Report, Fattura, Consegne]], [Alto],
	[*NEQ*], [3#footnote[Inventario, Consegne da effettuare, Report]], [Basso], 
)

=== Fattori correttivo
#table(
	columns: (2fr, 1fr),
	inset: 5pt,
	align: horizon,
	[*Comunicazione dati*], [4],
	[*Distribuzione elaborazione*], [1],
	[*Prestazioni*], [2],
	[*Utilizzo intensivo configurazione*], [0],
	[*Frequenza delle transazione*], [2],
	[*Inserimneto dati interattivo*], [2],
	[*Efficenza per l'utente finale*], [4],
	[*Aggiornamento interattivo*], [0],
	[*Complessità elaborativa*], [1],
	[*Riusabilità*], [0],
	[*Facilità installazione*], [2],
	[*Facilità gestione operativa*], [0],
	[*Molteplicità di siti*], [4],
	[*Facilità di modifica*], [4],
	[], [26],
)

== Piano di test funzionale
Usando il _category-partition_ testing testiamo _UtenteDAO_,
per i testing vengono usati dei valori fittizzi che possono essere
caricati sul database dal file _init_testing.sql_:
#table(
	columns: (1fr, 1fr, 1fr, 1fr, 1fr),
	inset: 3pt,
	align: horizon,
	[*Identificativo*], [*Descrizione*], [*Ingresso*], [*Risultato atteso*], [*Post-Condizione*],
	[TCD01], [Controlliamo che un cliente sia trovato all'interno del database e il nome non risulti libero], [nome: pescheria_esistente], [Già esistente], [Nessun effetto],
	[TCD02], [Vedere TCD01], [nome: pescheria_NON_esistente], [Non esistente], [Nessun effetto],
	[TCD03], [Controlliamo che la creazione di un cliente già esistente fallisca], [nome: pescheria_esistente], [Errore durante l'inserimento], [Nessun effetto],
	[TCD04], [Controlliamo che l'inserimento di un cliente non esistente abbia successo], [nome: pescheria_NON_esistente], [Successo], [Viene creato il cliente],
)
