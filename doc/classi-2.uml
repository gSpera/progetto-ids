@startuml
package Entity {
    class CategoriaProdotto {
        int codice
        PossibiliCategorie categoria
        TipoCategoriaProdotto tipo
        string descrizione
        float prezzo al kg
    }
    enum PossibiliCategorie {
        Pesci
        Crostacei
        Molluschi
    }
    enum TipoCategoriaProdotto {
        Verace
        Allevamento
        Congelato
    }
    CategoriaProdotto --- PossibiliCategorie
    CategoriaProdotto --- TipoCategoriaProdotto

    abstract Utente {
        string username
        string password
    }
    class Cliente {
        Tipo tipoCliente
        string nome
        string indirizzo
        string email
    }

    class "Cliente.Builder" as ClienteBuilder {
        + nuovo
        + con Tipo
        + con Nome
        + con Indirizzo
        + con Email
        + con Codice Fatturazione
        + con Username
        + con Password
        + costruisci
    }
    ClienteBuilder -- Cliente

    class Impiegato {
        string nome
    }
    class Fattorino {}
    class Fattura {
        int codice
        Cliente cliente
        List<Prodotto> prodotti
    }
    class Prodotto {
        int codice
        string descrizione
        CategoriaProdotto categoria
        float peso in kg
        String pescatore
        Prodotto.Stato stato
    }

    enum "Prodotto.Stato" as prodotto_stato {
        Creato
        Venduto
        In Preparazione
        Preparato
        In spedizione
        Reportato
        Fatturato
        ReportatoEFatturato
    }

    class Ordine {
        int codice
        List<Prodotto> prodotti
        Fattorino fattorino
    }

    note top of Prodotto : Il Pescatore è incluso in Prodotto

    Utente <-- Cliente
    Utente <-- Impiegato
    Fattorino --> Utente

    Prodotto --o CategoriaProdotto
    Prodotto --o Fattura

    Cliente --o Fattura

    Ordine -- Prodotto
    Ordine -- Fattorino
}

package Boundary {
    class "Boundary Background Scheduler" as BoundaryBackgroundScheduler {
        + schedula
        + genera report
        + genera e invia fattura
    }
    class "Boundary Impiegato" as BuondaryImpiegato {
        + main
        + registra prodotto
        + prepara ordine
    }
    class "Boundary Gestore" as BoundaryGestore {
        + main
        + registra cliente
        + registra impiegato
        + genera report
        + visualizza report
        + registra nuova categoria prodotto
    }
    class "Boundary Fattorino" as BoundaryFattorino {
        + main
        + visualizza spedizioni
        + conferma consegna
    }
    class "Boundary Cliente" as BoundaryCliente {
        + main
        + visualizza inventario
        + effettua ordine
    }
    class "Login Boundary" as LoginBoundary {
        + effettua login
        + mostra inventario
    }

    BuondaryImpiegato *-- LoginBoundary
    BoundaryGestore *-- LoginBoundary
    BoundaryFattorino *-- LoginBoundary
    BoundaryCliente *-- LoginBoundary
}

package Controller {
    class MainController {
        + prodotti disponibili
        + effettua login
        + registra prodotto
        + registra cliente
        + genera report
        + genera e invia fatture
    }

    class "MainController.Builder" as MainControllerBuilder {
        nuovo
		+ con Logger
		+ con ProdottoDAO
		+ con UtenteDAO
		+ con ClienteDAO
		+ costruisci E Sostituisci
    }
    MainControllerBuilder -- MainController

    note right of MainController: Singleton
}

package Utility {
    interface "EMail Server" as email{
        + invia fattura
    }

    class "No Op EMail Server" as noop_email {
    }

    class "Risultato<T>" as Risultato {
        + ha avuto successo
        + get Risultato
        + get Errore
        + come Optional
    }

    class ClienteBuilderException {}
    enum "ClienteBuilderException.Tipo" as ClienteBuilderExceptionTipo {
        Tipo Cliente NonSpecificato
		Nome Vuoto
		Username Vuoto
		Password Vuota
		Codice Fatturazione Non Specificato
		Cliente Già Costruito
    }
    ClienteBuilderExceptionTipo *-- ClienteBuilderException
    ClienteBuilderException -- ClienteBuilder

    class MainControllerBuilderException {}
    enum "MainControllerBuilderException.Tipo" as MainControllerBuilderExceptionTipo {
		ProdottoDAO Non Definito
		UtenteDAO Non Definito
		MainController Gia Costruito
		ClienteDAO Non Definito
    }
    MainControllerBuilderExceptionTipo *-- MainControllerBuilderException
    MainControllerBuilderException -- MainControllerBuilder

    noop_email --> email

    class Input {
        + next Int
        + next Line
        + next Long
        + next Boolean
        + next Date
        + next Float
    }

    class None {}
}

package DAO {
    interface "Cliente DAO" as ClienteDAO {
    }
    interface "Prodotto DAO" as ProdottoDAO {
    }
    interface "Utente DAO" as UtenteDAO {
    }

    class "SQL DAO Implementation" as SqlDaoImpl {
    }
    SqlDaoImpl --> ClienteDAO
    SqlDaoImpl --> ProdottoDAO
    SqlDaoImpl --> UtenteDAO
}

LoginBoundary -.-o MainController
BoundaryBackgroundScheduler -.-o MainController
BoundaryGestore -.-o MainController
BoundaryFattorino -.-o MainController

MainController ---o ClienteDAO
MainController ---o ProdottoDAO
MainController ---o UtenteDAO

Cliente -- ClienteDAO
Prodotto -- ProdottoDAO
Utente -- UtenteDAO
@enduml